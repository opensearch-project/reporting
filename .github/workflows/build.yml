run-name: Build Wazuh Indexer Reporting plugin | ${{ inputs.id}}
name: Build packages

# This workflow runs when any of the following occur:
# - Run manually
# - Invoked from another workflow
on:
  workflow_dispatch:
    inputs:
      revision:
        description: "Revision"
        type: string
        default: "0"
      id:
        description: "ID used to identify the workflow uniquely."
        type: string
        required: false
  workflow_call:
    inputs:
      revision:
        description: "Revision"
        type: string
        default: "0"
      id:
        description: "ID used to identify the workflow uniquely."
        type: string
        required: false

# ==========================
# Bibliography
# ==========================
#
# * Reusable workflows: limitations
#   | https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
# * Using matrix in reusable workflows:
#   | https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-a-matrix-strategy-with-a-reusable-workflow
# * Reading input from the called workflow
#   | https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
# * Ternary operator
#   | https://docs.github.com/en/actions/learn-github-actions/expressions#example

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      plugin_name: wazuh-indexer-reports-scheduler
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle # Used for caching
        uses: gradle/actions/setup-gradle@v4

      - name: Get version
        id: version
        run: echo "version=$(<VERSION)" >> "$GITHUB_OUTPUT"

      - name: Build with Gradle
        run: ./gradlew build -Dversion=${{ steps.version.outputs.version }} -Drevision=${{ inputs.revision }}

      - run: ls -la build/distributions

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.plugin_name }}-${{ steps.version.outputs.version }}.${{ inputs.revision }}.zip
          path: build/distributions/${{ env.plugin_name }}-${{ steps.version.outputs.version }}.${{ inputs.revision }}.zip
          if-no-files-found: error
